/*
 * Copyright 2014 Kevin Raoofi
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package edu.frostburg.cosc310.hw.PigLatin;

import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * Panel containing two text areas. If the first text has its contents modified,
 * the second text area updated with a Pig Latin version.
 *
 * @author Kevin Raoofi
 */
public final class PigLatinPanel extends javax.swing.JPanel {

    private static final ObjectTransformer<String> plc
            = new StringTransformerParagraphProxy(new PigLatinTransformer());

    /**
     * Creates new form PigLatinPanel
     */
    public PigLatinPanel() {
        initComponents();
        txtInput.getDocument().addDocumentListener(
                new PigLatinDoumentListener(plc, txtInput, txtPigLatinOutput));
    }

    /**
     * Gets the text area which represents where the input text area
     *
     * @return input text area
     */
    public JScrollPane getScrollPaneNormal() {
        return scrollPaneNormal;
    }

    public void setScrollPaneNormal(JScrollPane scrollPaneNormal) {
        this.scrollPaneNormal = scrollPaneNormal;
    }

    public JScrollPane getScrollPanePigLatin() {
        return scrollPanePigLatin;
    }

    public void setScrollPanePigLatin(JScrollPane scrollPanePigLatin) {
        this.scrollPanePigLatin = scrollPanePigLatin;
    }

    public JTextArea getTxtInput() {
        return txtInput;
    }

    public void setTxtInput(JTextArea txtInput) {
        this.txtInput = txtInput;
    }

    /**
     * Gets the text area where output with Pig Latin is supposed to go
     *
     * @return output text area
     */
    public JTextArea getTxtPigLatinOutput() {
        return txtPigLatinOutput;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneNormal = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextArea();
        scrollPanePigLatin = new javax.swing.JScrollPane();
        txtPigLatinOutput = new javax.swing.JTextArea();

        setPreferredSize(new java.awt.Dimension(400, 300));
        setLayout(new java.awt.GridLayout(1, 0));

        txtInput.setColumns(20);
        txtInput.setLineWrap(true);
        txtInput.setRows(5);
        scrollPaneNormal.setViewportView(txtInput);

        add(scrollPaneNormal);

        txtPigLatinOutput.setEditable(false);
        txtPigLatinOutput.setColumns(20);
        txtPigLatinOutput.setLineWrap(true);
        txtPigLatinOutput.setRows(5);
        scrollPanePigLatin.setViewportView(txtPigLatinOutput);

        add(scrollPanePigLatin);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrollPaneNormal;
    private javax.swing.JScrollPane scrollPanePigLatin;
    private javax.swing.JTextArea txtInput;
    private javax.swing.JTextArea txtPigLatinOutput;
    // End of variables declaration//GEN-END:variables

    /**
     * This class is implemented poorly. There is an implied connection between
     * d1 and this instance listening to events in d1. d1
     */
    private static class PigLatinDoumentListener implements DocumentListener {
        /*
         * This class is implemented poorly. There is an implied connection 
         */

        final ObjectTransformer<String> pigLatinTransformer;

        /**
         * Text containing input text; will never be modified
         */
        final JTextArea d1;
        /**
         * Text area containing
         */
        final JTextArea d2;

        /**
         * You gotta put all these values in for this class
         *
         * @param pigLatinTransformer object transformer to transform a String
         * to its Pig Latin variant
         * @param d1 the input text area
         * @param d2 the output text areaF
         */
        public PigLatinDoumentListener(ObjectTransformer<String> pigLatinTransformer, JTextArea d1, JTextArea d2) {
            this.pigLatinTransformer = pigLatinTransformer;
            this.d1 = d1;
            this.d2 = d2;
        }

        @Override
        public void insertUpdate(DocumentEvent e) {
            updateText();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            updateText();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            // does nothing
        }

        /**
         * Takes text from input text area, runs it through the given
         * {@link ObjectTransformer<String>} to the output text area.
         */
        void updateText() {
            String text = d1.getText();
            d2.setText(pigLatinTransformer.transform(text));
        }

    }
}
